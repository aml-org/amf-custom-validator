#%Validation Profile 1.0

profile: Owasp 2019 API Security

violation:
  - broken-object-level-authorization-use-guids
  - excessive-data-exposure-mandatory-schema
  - lack-of-resources-and-rate-limiting-too-many-requests
  - injection-pattern-on-string-parameters
  - improper-assets-management-environment-info
  - improper-assets-management-version
  - broken-user-authentication-use-tls
  - broken-user-authentication-authenticate-api

validations:

  broken-object-level-authorization-use-guids:
    message: Prefer to use random and unpredictable values as GUIDs for recordsâ€™ IDs. Must define string pattern "^[{]?[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}[}]?$"
    targetClass: apiContract.Parameter
    if:
      propertyConstraints:
        core.name:
          pattern: ".*id$"
    then:
      propertyConstraints:
        shapes.schema / shacl.pattern:
          minCount: 1
          in:
            - "^[{]?[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}[}]?$"

  excessive-data-exposure-mandatory-schema:
    message: |
      Implement a schema-based response validation mechanism as an extra layer of security. As part of this mechanism
      define and enforce data returned by all API methods, including errors.
    targetClass: apiContract.Response
    propertyConstraints:
      apiContract.payload / shapes.schema:
        minCount: 1

  lack-of-resources-and-rate-limiting-too-many-requests:
    message: |
      Notify the client when the rate limit is exceeded by providing the limit number and the time at which the limit will
      be reset. Make sure to define an approriate '429' status code response.
    targetClass: apiContract.Operation
    if:
      propertyConstraints:
        apiContract.returns:
          atLeast:
            count: 1
            validation:
              propertyConstraints:
                apiContract.statusCode:
                  in:
                    - "200"
    then:
      propertyConstraints:
        apiContract.returns:
          atLeast:
            count: 1
            validation:
              propertyConstraints:
                apiContract.statusCode:
                  in:
                    - "429"

  injection-pattern-on-string-parameters:
    message: Define strict patterns for all string parameters
    targetClass: apiContract.Parameter
    if:
      propertyConstraints:
        shapes.schema / shacl.datatype:
          minCount: 1
          in:
            - "xsd:string"
    then:
      propertyConstraints:
        shapes.schema / shacl.pattern:
          minCount: 1

  improper-assets-management-environment-info:
    message: |
      The purpose of an API host is unclear, and there are no explicit answers to the following questions:
          Which environment is the API running in (e.g., production, staging, test, development)?
          Who should have network access to the API (e.g., public, internal, partners)?
    targetClass: apiContract.WebAPI
    or:
      - propertyConstraints:
          apiContract.server:
            minCount: 1
            nested:
              propertyConstraints:
                core.description:
                  minCount: 1
      - propertyConstraints:
          core.description:
            minCount: 1

  improper-assets-management-version:
    message: |
      The purpose of an API host is unclear, and there are no explicit answers to the following questions:
          Which API version is running?
    targetClass: apiContract.WebAPI
    propertyConstraints:
      core.version:
        minCount: 1

  broken-user-authentication-use-tls:
    message: |
      The login page and all subsequent authenticated pages must be exclusively accessed over TLS or other strong
      transport.  Failure to utilize TLS or other strong transport for authenticated pages after login enables an attacker to view the
      unencrypted session ID and compromise the user's authenticated session.
    targetClass: apiContract.WebAPI
    propertyConstraints:
      apiContract.server:
        atLeast:
          count: 1
          validation:
            propertyConstraints:
              core.urlTemplate:
                pattern: "^https://"

  broken-user-authentication-authenticate-api:
    message: |
      Make sure you know all the possible flows to authenticate to the API (mobile/ web/deep links that implement
      one-click authentication/etc.). Security scheme must be applied at global or operation level.
    targetClass: apiContract.Operation
    propertyConstraints:
      security.security:
        minCount: 1
