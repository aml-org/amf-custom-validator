{
  "@context": {
    "actual": {
      "@id": "http://a.ml/vocabularies/validation#actual"
    },
    "argument": {
      "@id": "http://a.ml/vocabularies/validation#argument"
    },
    "column": {
      "@id": "http://a.ml/vocabularies/lexical#column"
    },
    "component": {
      "@id": "http://a.ml/vocabularies/validation#component"
    },
    "condition": {
      "@id": "http://a.ml/vocabularies/validation#condition"
    },
    "conforms": {
      "@id": "http://www.w3.org/ns/shacl#conforms"
    },
    "end": {
      "@id": "http://a.ml/vocabularies/lexical#end"
    },
    "expected": {
      "@id": "http://a.ml/vocabularies/validation#expected"
    },
    "focusNode": {
      "@id": "http://www.w3.org/ns/shacl#focusNode"
    },
    "lexical": "http://a.ml/vocabularies/lexical#",
    "line": {
      "@id": "http://a.ml/vocabularies/lexical#line"
    },
    "location": {
      "@id": "http://a.ml/vocabularies/validation#location"
    },
    "negated": {
      "@id": "http://a.ml/vocabularies/validation#negated"
    },
    "range": {
      "@id": "http://a.ml/vocabularies/lexical#range"
    },
    "result": {
      "@id": "http://www.w3.org/ns/shacl#result"
    },
    "resultMessage": {
      "@id": "http://www.w3.org/ns/shacl#resultMessage"
    },
    "resultPath": {
      "@id": "http://www.w3.org/ns/shacl#resultPath"
    },
    "resultSeverity": {
      "@id": "http://www.w3.org/ns/shacl#resultSeverity"
    },
    "shacl": "http://www.w3.org/ns/shacl#",
    "sourceShapeName": {
      "@id": "http://a.ml/vocabularies/validation#sourceShapeName"
    },
    "start": {
      "@id": "http://a.ml/vocabularies/lexical#start"
    },
    "subResult": {
      "@id": "http://a.ml/vocabularies/validation#subResult"
    },
    "trace": {
      "@id": "http://a.ml/vocabularies/validation#trace"
    },
    "traceValue": {
      "@id": "http://www.w3.org/ns/shacl#traceValue"
    },
    "uri": {
      "@id": "http://a.ml/vocabularies/lexical#uri"
    },
    "validation": "http://a.ml/vocabularies/validation#"
  },
  "@type": "shacl:ValidationReport",
  "conforms": false,
  "result": [
    {
      "@type": [
        "shacl:ValidationResult"
      ],
      "focusNode": {
        "@id": "file://./test/data/production/datagraph/negative8.oas#/declarations/types/any/Problematic"
      },
      "resultMessage": "Shapes containing unions of scalar and oject types cannot be federated and are not a good design practice. Object\nshapes with scalar flags/properties can be used as an alternative\n",
      "resultSeverity": {
        "@id": "http://www.w3.org/ns/shacl#Violation"
      },
      "sourceShapeName": "heterogeneous-oneof",
      "trace": [
        {
          "@type": [
            "validation:TraceMessage"
          ],
          "component": "nested",
          "resultPath": "shacl.xone",
          "traceValue": {
            "actual": 0,
            "expected": 0,
            "negated": true,
            "subResult": []
          }
        },
        {
          "@type": [
            "validation:TraceMessage"
          ],
          "component": "nested",
          "resultPath": "shacl.xone",
          "traceValue": {
            "actual": 0,
            "expected": 0,
            "negated": true,
            "subResult": []
          }
        }
      ]
    },
    {
      "@type": [
        "shacl:ValidationResult"
      ],
      "focusNode": {
        "@id": "file://./test/data/production/datagraph/negative8.oas#/declarations/types/any/Problematic2"
      },
      "resultMessage": "Shapes containing unions of scalar and oject types cannot be federated and are not a good design practice. Object\nshapes with scalar flags/properties can be used as an alternative\n",
      "resultSeverity": {
        "@id": "http://www.w3.org/ns/shacl#Violation"
      },
      "sourceShapeName": "heterogeneous-anyof",
      "trace": [
        {
          "@type": [
            "validation:TraceMessage"
          ],
          "component": "nested",
          "resultPath": "shacl.or",
          "traceValue": {
            "actual": 0,
            "expected": 0,
            "negated": true,
            "subResult": []
          }
        },
        {
          "@type": [
            "validation:TraceMessage"
          ],
          "component": "nested",
          "resultPath": "shacl.or",
          "traceValue": {
            "actual": 0,
            "expected": 0,
            "negated": true,
            "subResult": []
          }
        }
      ]
    }
  ]
}
