{
  "@context": {
    "actual": {
      "@id": "http://a.ml/vocabularies/validation#actual"
    },
    "argument": {
      "@id": "http://a.ml/vocabularies/validation#argument"
    },
    "column": {
      "@id": "http://a.ml/vocabularies/lexical#column"
    },
    "component": {
      "@id": "http://a.ml/vocabularies/validation#component"
    },
    "condition": {
      "@id": "http://a.ml/vocabularies/validation#condition"
    },
    "conforms": {
      "@id": "http://www.w3.org/ns/shacl#conforms"
    },
    "end": {
      "@id": "http://a.ml/vocabularies/lexical#end"
    },
    "expected": {
      "@id": "http://a.ml/vocabularies/validation#expected"
    },
    "focusNode": {
      "@id": "http://www.w3.org/ns/shacl#focusNode"
    },
    "lexical": "http://a.ml/vocabularies/lexical#",
    "line": {
      "@id": "http://a.ml/vocabularies/lexical#line"
    },
    "location": {
      "@id": "http://a.ml/vocabularies/validation#location"
    },
    "negated": {
      "@id": "http://a.ml/vocabularies/validation#negated"
    },
    "range": {
      "@id": "http://a.ml/vocabularies/lexical#range"
    },
    "result": {
      "@id": "http://www.w3.org/ns/shacl#result"
    },
    "resultMessage": {
      "@id": "http://www.w3.org/ns/shacl#resultMessage"
    },
    "resultPath": {
      "@id": "http://www.w3.org/ns/shacl#resultPath"
    },
    "resultSeverity": {
      "@id": "http://www.w3.org/ns/shacl#resultSeverity"
    },
    "shacl": "http://www.w3.org/ns/shacl#",
    "sourceShapeName": {
      "@id": "http://a.ml/vocabularies/validation#sourceShapeName"
    },
    "start": {
      "@id": "http://a.ml/vocabularies/lexical#start"
    },
    "subResult": {
      "@id": "http://a.ml/vocabularies/validation#subResult"
    },
    "trace": {
      "@id": "http://a.ml/vocabularies/validation#trace"
    },
    "traceValue": {
      "@id": "http://www.w3.org/ns/shacl#traceValue"
    },
    "uri": {
      "@id": "http://a.ml/vocabularies/lexical#uri"
    },
    "validation": "http://a.ml/vocabularies/validation#"
  },
  "@type": "shacl:ValidationReport",
  "conforms": false,
  "result": [
    {
      "@type": [
        "shacl:ValidationResult"
      ],
      "focusNode": {
        "@id": "file://./test/data/production/datagraph/negative6.oas#/declarations/types/Invoice"
      },
      "resultMessage": "Providing a description of resource schemas is a good practice that makes it easier for consumers of your API to\nunderstand your API and it will be reused as type descriptions in the federated API GraphQL schema.\n",
      "resultSeverity": {
        "@id": "http://www.w3.org/ns/shacl#Violation"
      },
      "sourceShapeName": "missing-type-description",
      "trace": [
        {
          "@type": [
            "validation:TraceMessage"
          ],
          "component": "minCount",
          "resultPath": "core.description",
          "traceValue": {
            "actual": 0,
            "condition": ">=",
            "expected": 1,
            "negated": false
          }
        },
        {
          "@type": [
            "validation:TraceMessage"
          ],
          "component": "minCount",
          "resultPath": "doc.link-target",
          "traceValue": {
            "actual": 0,
            "condition": ">=",
            "expected": 1,
            "negated": false
          }
        }
      ]
    },
    {
      "@type": [
        "shacl:ValidationResult"
      ],
      "focusNode": {
        "@id": "file://./test/data/production/datagraph/negative6.oas#/declarations/types/Customer/property/id"
      },
      "resultMessage": "Providing a description of schema properties is a good practice that makes it easier for consumers of your API to\nunderstand your API and it will be reused as type descriptions in the federated API GraphQL schema fields.\n",
      "resultSeverity": {
        "@id": "http://www.w3.org/ns/shacl#Violation"
      },
      "sourceShapeName": "missing-property-description",
      "trace": [
        {
          "@type": [
            "validation:TraceMessage"
          ],
          "component": "minCount",
          "resultPath": "shapes.range / core.description",
          "traceValue": {
            "actual": 0,
            "condition": ">=",
            "expected": 1,
            "negated": false
          }
        }
      ]
    },
    {
      "@type": [
        "shacl:ValidationResult"
      ],
      "focusNode": {
        "@id": "file://./test/data/production/datagraph/negative6.oas#/web-api/end-points/%2Fusers%2F%7Bid%7D/parameter/path/id"
      },
      "resultMessage": "Providing a description of API parameters is a good practice that makes it easier for consumers of your API to\nunderstand your API and it will be reused as type descriptions in the federated API GraphQL schema field arguments.\n",
      "resultSeverity": {
        "@id": "http://www.w3.org/ns/shacl#Violation"
      },
      "sourceShapeName": "missing-parameter-description",
      "trace": [
        {
          "@type": [
            "validation:TraceMessage"
          ],
          "component": "minCount",
          "resultPath": "core.description",
          "traceValue": {
            "actual": 0,
            "condition": ">=",
            "expected": 1,
            "negated": false
          }
        }
      ]
    }
  ]
}
