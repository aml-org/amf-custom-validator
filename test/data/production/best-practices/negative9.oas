openapi: "3.0.0"
info:
  title: Awesome API
  version: "1.0"
  description: the awesome API
servers:
  - url: https://production.test.com/api/v1
    description: production environment
externalDocs:
  description: "Find more info here",
  url: "https://example.com"

components:
  schemas:
    Customer:
      description: a customer
      type: object
      additionalProperties: false
      properties:
        id:
          description: a property
          type: string
        name:
          description: a property
          type: string
        streetAddress:
          description: a property
          type: string
        createdAt:
          description: a property
          type: string
          format: date-time
        nested:
          description: nested
          type: object
          properties:
            nestedProp:
              description: prop
              type: string
            startDate:
              description: prop
              type: string
              format: date-time
      required: ["id"]

paths:
  /users/{id}:
    description: path description
    parameters:
      - name: id
        in: path
        required: true
        description: the user identifier, as is
        schema:
          type: string
      - name: accept
        in: header
        description: a header
        schema:
          type: string
      - name: other
        in: query
        description: a query param
    get:
      description: op-description
      operationId: opid
      tags:
        - Invoice Items
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Customer"
            examples:
              a:
                value:
                  id: x
              b:
                value:
                  id: y
      responses:
        "200":
          description: teapot
          headers:
            content-type:
              description: content
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Customer"
              example:
                id: test

  /users-list/{id}:
    description: path description
    parameters:
      - name: id
        in: path
        required: true
        description: the user identifier, as is
        schema:
          type: string
        example:
          id: 34
      - name: accept
        description: accept
        in: header
        schema:
          type: string
        example:
          name: a
    get:
      description: op-description
      operationId: opid
      tags:
        - Invoice Items
      responses:
        "999":
          description: teapot
          headers:
            content-type:
              description: content
              schema:
                type: string
              example:
                teapot
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Customer"
              examples:
                a:
                  value:
                    id: z