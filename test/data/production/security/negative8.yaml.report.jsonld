[
  {
    "@context": {
      "actual": {
        "@id": "http://a.ml/vocabularies/validation#actual"
      },
      "argument": {
        "@id": "http://a.ml/vocabularies/validation#argument"
      },
      "column": {
        "@id": "http://a.ml/vocabularies/lexical#column"
      },
      "component": {
        "@id": "http://a.ml/vocabularies/validation#component"
      },
      "condition": {
        "@id": "http://a.ml/vocabularies/validation#condition"
      },
      "conforms": {
        "@id": "http://www.w3.org/ns/shacl#conforms"
      },
      "doc": "http://a.ml/vocabularies/document#",
      "end": {
        "@id": "http://a.ml/vocabularies/lexical#end"
      },
      "expected": {
        "@id": "http://a.ml/vocabularies/validation#expected"
      },
      "focusNode": {
        "@id": "http://www.w3.org/ns/shacl#focusNode"
      },
      "lexical": "http://a.ml/vocabularies/lexical#",
      "lexicalSchema": "file:///dialects/lexical.yaml#/declarations/",
      "line": {
        "@id": "http://a.ml/vocabularies/lexical#line"
      },
      "location": {
        "@id": "http://a.ml/vocabularies/validation#location"
      },
      "meta": "http://a.ml/vocabularies/meta#",
      "negated": {
        "@id": "http://a.ml/vocabularies/validation#negated"
      },
      "profileName": {
        "@id": "http://a.ml/vocabularies/validation#profileName"
      },
      "range": {
        "@id": "http://a.ml/vocabularies/lexical#range"
      },
      "reportSchema": "file:///dialects/validation-report.yaml#/declarations/",
      "result": {
        "@id": "http://www.w3.org/ns/shacl#result"
      },
      "resultMessage": {
        "@id": "http://www.w3.org/ns/shacl#resultMessage"
      },
      "resultPath": {
        "@id": "http://www.w3.org/ns/shacl#resultPath"
      },
      "resultSeverity": {
        "@id": "http://www.w3.org/ns/shacl#resultSeverity"
      },
      "shacl": "http://www.w3.org/ns/shacl#",
      "sourceShapeName": {
        "@id": "http://a.ml/vocabularies/validation#sourceShapeName"
      },
      "start": {
        "@id": "http://a.ml/vocabularies/lexical#start"
      },
      "subResult": {
        "@id": "http://a.ml/vocabularies/validation#subResult"
      },
      "trace": {
        "@id": "http://a.ml/vocabularies/validation#trace"
      },
      "traceValue": {
        "@id": "http://www.w3.org/ns/shacl#traceValue"
      },
      "uri": {
        "@id": "http://a.ml/vocabularies/lexical#uri"
      },
      "validation": "http://a.ml/vocabularies/validation#"
    },
    "@id": "dialect-instance",
    "@type": [
      "meta:DialectInstance",
      "doc:Document",
      "doc:Fragment",
      "doc:Module",
      "doc:Unit"
    ],
    "doc:encodes": [
      {
        "@id": "validation-report",
        "@type": [
          "reportSchema:ReportNode",
          "shacl:ValidationReport"
        ],
        "conforms": false,
        "profileName": "Anypoint Security Best Practices",
        "result": [
          {
            "@id": "violation_0",
            "@type": [
              "reportSchema:ValidationResultNode",
              "shacl:ValidationResult"
            ],
            "focusNode": "amf://id#1",
            "location": {
              "@id": "violation_0_location",
              "@type": [
                "lexicalSchema:LocationNode",
                "lexical:Location"
              ],
              "range": {
                "@id": "violation_0_location_range",
                "@type": [
                  "lexicalSchema:RangeNode",
                  "lexical:Range"
                ],
                "end": {
                  "@id": "violation_0_location_range_end",
                  "@type": [
                    "lexicalSchema:PositionNode",
                    "lexical:Position"
                  ],
                  "column": 0,
                  "line": 16
                },
                "start": {
                  "@id": "violation_0_location_range_start",
                  "@type": [
                    "lexicalSchema:PositionNode",
                    "lexical:Position"
                  ],
                  "column": 4,
                  "line": 12
                }
              },
              "uri": "file://./test/data/production/security/negative8.yaml"
            },
            "resultMessage": "- Description\n\nAPI negotiates authentication with a remote Simple And Protected Negotiate (SPNEGO) -based system.\n\n- Possible exploit scenario\n\nThe most common systems used in negotiating authentication are Kerberos and the now obsolete NTLM (New Technology LAN Manager). The severity of this risk heavily depends on the which system is used: while Kerberos is reasonably secure, NTLM is not.\nBecause your API cannot know which system it is negotiating with, the only safe option is to assume the worst and treat all negotiation as not being secure.\n\n- Remediation\n\nUse a more secure authentication method, like OAuth 2.0. It uses access tokens with limited lifetime and authorizations (the scopes) granted that the resource owner grants from an authorization server.\nAn API operation can be consumed only if the request includes an access token and the scopes of the token match the scopes that the API operation requires. Even if attackers successfully retrieved access tokens, they can only use the token on a subset of the API operation and for a limited time.\n",
            "resultSeverity": "http://www.w3.org/ns/shacl#Violation",
            "sourceShapeName": "api-negotiates-authentication",
            "trace": [
              {
                "@id": "violation_0_0",
                "@type": [
                  "reportSchema:TraceMessageNode",
                  "validation:TraceMessage"
                ],
                "component": "pattern",
                "location": {
                  "@id": "violation_0_0_location",
                  "@type": [
                    "lexicalSchema:LocationNode",
                    "lexical:Location"
                  ],
                  "range": {
                    "@id": "violation_0_0_location_range",
                    "@type": [
                      "lexicalSchema:RangeNode",
                      "lexical:Range"
                    ],
                    "end": {
                      "@id": "violation_0_0_location_range_end",
                      "@type": [
                        "lexicalSchema:PositionNode",
                        "lexical:Position"
                      ],
                      "column": 0,
                      "line": 16
                    },
                    "start": {
                      "@id": "violation_0_0_location_range_start",
                      "@type": [
                        "lexicalSchema:PositionNode",
                        "lexical:Position"
                      ],
                      "column": 4,
                      "line": 12
                    }
                  },
                  "uri": "file://./test/data/production/security/negative8.yaml"
                },
                "resultPath": "http://a.ml/vocabularies/core#name",
                "traceValue": {
                  "@id": "violation_0_0_traceValue",
                  "@type": [
                    "reportSchema:TraceValueNode",
                    "validation:TraceValue"
                  ],
                  "argument": "negotiateAuth",
                  "negated": true
                }
              }
            ]
          }
        ]
      }
    ],
    "doc:processingData": [
      {
        "@id": "processing-data",
        "@type": [
          "doc:DialectInstanceProcessingData"
        ],
        "doc:sourceSpec": "Validation Report 1.0"
      }
    ]
  }
]
