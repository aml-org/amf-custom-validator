[
  {
    "@context": {
      "actual": {
        "@id": "http://a.ml/vocabularies/validation#actual"
      },
      "argument": {
        "@id": "http://a.ml/vocabularies/validation#argument"
      },
      "column": {
        "@id": "http://a.ml/vocabularies/lexical#column"
      },
      "component": {
        "@id": "http://a.ml/vocabularies/validation#component"
      },
      "condition": {
        "@id": "http://a.ml/vocabularies/validation#condition"
      },
      "conforms": {
        "@id": "http://www.w3.org/ns/shacl#conforms"
      },
      "doc": "http://a.ml/vocabularies/document#",
      "end": {
        "@id": "http://a.ml/vocabularies/lexical#end"
      },
      "expected": {
        "@id": "http://a.ml/vocabularies/validation#expected"
      },
      "focusNode": {
        "@id": "http://www.w3.org/ns/shacl#focusNode"
      },
      "lexical": "http://a.ml/vocabularies/lexical#",
      "lexicalSchema": "file:///dialects/lexical.yaml#/declarations/",
      "line": {
        "@id": "http://a.ml/vocabularies/lexical#line"
      },
      "location": {
        "@id": "http://a.ml/vocabularies/validation#location"
      },
      "meta": "http://a.ml/vocabularies/meta#",
      "negated": {
        "@id": "http://a.ml/vocabularies/validation#negated"
      },
      "range": {
        "@id": "http://a.ml/vocabularies/lexical#range"
      },
      "reportSchema": "file:///dialects/validation-report.yaml#/declarations/",
      "result": {
        "@id": "http://www.w3.org/ns/shacl#result"
      },
      "resultMessage": {
        "@id": "http://www.w3.org/ns/shacl#resultMessage"
      },
      "resultPath": {
        "@id": "http://www.w3.org/ns/shacl#resultPath"
      },
      "resultSeverity": {
        "@id": "http://www.w3.org/ns/shacl#resultSeverity"
      },
      "shacl": "http://www.w3.org/ns/shacl#",
      "sourceShapeName": {
        "@id": "http://a.ml/vocabularies/validation#sourceShapeName"
      },
      "start": {
        "@id": "http://a.ml/vocabularies/lexical#start"
      },
      "subResult": {
        "@id": "http://a.ml/vocabularies/validation#subResult"
      },
      "trace": {
        "@id": "http://a.ml/vocabularies/validation#trace"
      },
      "traceValue": {
        "@id": "http://www.w3.org/ns/shacl#traceValue"
      },
      "uri": {
        "@id": "http://a.ml/vocabularies/lexical#uri"
      },
      "validation": "http://a.ml/vocabularies/validation#"
    },
    "@id": "dialect-instance",
    "@type": [
      "meta:DialectInstance",
      "doc:Document",
      "doc:Fragment",
      "doc:Module",
      "doc:Unit"
    ],
    "doc:encodes": [
      {
        "@id": "validation-report",
        "@type": [
          "reportSchema:ReportNode",
          "shacl:ValidationReport"
        ],
        "conforms": true,
        "profileName": "Spectral Base",
        "result": [
          {
            "@id": "warning_0",
            "@type": [
              "reportSchema:ValidationResultNode",
              "shacl:ValidationResult"
            ],
            "focusNode": "amf://id#2",
            "location": {
              "@id": "warning_0_location",
              "@type": [
                "lexicalSchema:LocationNode",
                "lexical:Location"
              ],
              "range": {
                "@id": "warning_0_location_range",
                "@type": [
                  "lexicalSchema:RangeNode",
                  "lexical:Range"
                ],
                "end": {
                  "@id": "warning_0_location_range_end",
                  "@type": [
                    "lexicalSchema:PositionNode",
                    "lexical:Position"
                  ],
                  "column": 25,
                  "line": 42
                },
                "start": {
                  "@id": "warning_0_location_range_start",
                  "@type": [
                    "lexicalSchema:PositionNode",
                    "lexical:Position"
                  ],
                  "column": 0,
                  "line": 1
                }
              },
              "uri": "file://./test/data/production/spectral/negative3.yaml"
            },
            "resultMessage": "Info object should contain contact object.\n\nHopefully your API description document is so good that nobody ever needs to contact you with questions, but that\nis rarely the case. The contact object has a few different options for contact details.\n",
            "resultSeverity": "http://www.w3.org/ns/shacl#Warning",
            "sourceShapeName": "info-contact",
            "trace": [
              {
                "@id": "warning_0_0",
                "@type": [
                  "reportSchema:TraceMessageNode",
                  "validation:TraceMessage"
                ],
                "component": "minCount",
                "location": {
                  "@id": "warning_0_0_location",
                  "@type": [
                    "lexicalSchema:LocationNode",
                    "lexical:Location"
                  ],
                  "range": {
                    "@id": "warning_0_0_location_range",
                    "@type": [
                      "lexicalSchema:RangeNode",
                      "lexical:Range"
                    ],
                    "end": {
                      "@id": "warning_0_0_location_range_end",
                      "@type": [
                        "lexicalSchema:PositionNode",
                        "lexical:Position"
                      ],
                      "column": 25,
                      "line": 42
                    },
                    "start": {
                      "@id": "warning_0_0_location_range_start",
                      "@type": [
                        "lexicalSchema:PositionNode",
                        "lexical:Position"
                      ],
                      "column": 0,
                      "line": 1
                    }
                  },
                  "uri": "file://./test/data/production/spectral/negative3.yaml"
                },
                "resultPath": "http://a.ml/vocabularies/core#provider",
                "traceValue": {
                  "@id": "warning_0_0_traceValue",
                  "@type": [
                    "reportSchema:TraceValueNode",
                    "validation:TraceValue"
                  ],
                  "actual": 0,
                  "condition": ">=",
                  "expected": 1,
                  "negated": false
                }
              }
            ]
          },
          {
            "@id": "warning_1",
            "@type": [
              "reportSchema:ValidationResultNode",
              "shacl:ValidationResult"
            ],
            "focusNode": "amf://id#2",
            "location": {
              "@id": "warning_1_location",
              "@type": [
                "lexicalSchema:LocationNode",
                "lexical:Location"
              ],
              "range": {
                "@id": "warning_1_location_range",
                "@type": [
                  "lexicalSchema:RangeNode",
                  "lexical:Range"
                ],
                "end": {
                  "@id": "warning_1_location_range_end",
                  "@type": [
                    "lexicalSchema:PositionNode",
                    "lexical:Position"
                  ],
                  "column": 25,
                  "line": 42
                },
                "start": {
                  "@id": "warning_1_location_range_start",
                  "@type": [
                    "lexicalSchema:PositionNode",
                    "lexical:Position"
                  ],
                  "column": 0,
                  "line": 1
                }
              },
              "uri": "file://./test/data/production/spectral/negative3.yaml"
            },
            "resultMessage": "OpenAPI object info description must be present and non-empty string.\nExamples can contain Markdown so you can really go to town with them, implementing getting started information\nlike where to find authentication keys, and how to use them.\n",
            "resultSeverity": "http://www.w3.org/ns/shacl#Warning",
            "sourceShapeName": "info-description",
            "trace": [
              {
                "@id": "warning_1_0",
                "@type": [
                  "reportSchema:TraceMessageNode",
                  "validation:TraceMessage"
                ],
                "component": "minCount",
                "location": {
                  "@id": "warning_1_0_location",
                  "@type": [
                    "lexicalSchema:LocationNode",
                    "lexical:Location"
                  ],
                  "range": {
                    "@id": "warning_1_0_location_range",
                    "@type": [
                      "lexicalSchema:RangeNode",
                      "lexical:Range"
                    ],
                    "end": {
                      "@id": "warning_1_0_location_range_end",
                      "@type": [
                        "lexicalSchema:PositionNode",
                        "lexical:Position"
                      ],
                      "column": 25,
                      "line": 42
                    },
                    "start": {
                      "@id": "warning_1_0_location_range_start",
                      "@type": [
                        "lexicalSchema:PositionNode",
                        "lexical:Position"
                      ],
                      "column": 0,
                      "line": 1
                    }
                  },
                  "uri": "file://./test/data/production/spectral/negative3.yaml"
                },
                "resultPath": "http://a.ml/vocabularies/core#description",
                "traceValue": {
                  "@id": "warning_1_0_traceValue",
                  "@type": [
                    "reportSchema:TraceValueNode",
                    "validation:TraceValue"
                  ],
                  "actual": 0,
                  "condition": ">=",
                  "expected": 1,
                  "negated": false
                }
              }
            ]
          },
          {
            "@id": "warning_2",
            "@type": [
              "reportSchema:ValidationResultNode",
              "shacl:ValidationResult"
            ],
            "focusNode": "amf://id#2",
            "location": {
              "@id": "warning_2_location",
              "@type": [
                "lexicalSchema:LocationNode",
                "lexical:Location"
              ],
              "range": {
                "@id": "warning_2_location_range",
                "@type": [
                  "lexicalSchema:RangeNode",
                  "lexical:Range"
                ],
                "end": {
                  "@id": "warning_2_location_range_end",
                  "@type": [
                    "lexicalSchema:PositionNode",
                    "lexical:Position"
                  ],
                  "column": 25,
                  "line": 42
                },
                "start": {
                  "@id": "warning_2_location_range_start",
                  "@type": [
                    "lexicalSchema:PositionNode",
                    "lexical:Position"
                  ],
                  "column": 0,
                  "line": 1
                }
              },
              "uri": "file://./test/data/production/spectral/negative3.yaml"
            },
            "resultMessage": "The info object should have a license key.\nIt can be hard to pick a license, so if you don't have a lawyer around you can use TLDRLegal and Choose a License\nto help give you an idea.\nHow useful this is in court is not entirely known, but having a license is better than not having a license.\n",
            "resultSeverity": "http://www.w3.org/ns/shacl#Warning",
            "sourceShapeName": "info-license",
            "trace": [
              {
                "@id": "warning_2_0",
                "@type": [
                  "reportSchema:TraceMessageNode",
                  "validation:TraceMessage"
                ],
                "component": "minCount",
                "location": {
                  "@id": "warning_2_0_location",
                  "@type": [
                    "lexicalSchema:LocationNode",
                    "lexical:Location"
                  ],
                  "range": {
                    "@id": "warning_2_0_location_range",
                    "@type": [
                      "lexicalSchema:RangeNode",
                      "lexical:Range"
                    ],
                    "end": {
                      "@id": "warning_2_0_location_range_end",
                      "@type": [
                        "lexicalSchema:PositionNode",
                        "lexical:Position"
                      ],
                      "column": 25,
                      "line": 42
                    },
                    "start": {
                      "@id": "warning_2_0_location_range_start",
                      "@type": [
                        "lexicalSchema:PositionNode",
                        "lexical:Position"
                      ],
                      "column": 0,
                      "line": 1
                    }
                  },
                  "uri": "file://./test/data/production/spectral/negative3.yaml"
                },
                "resultPath": "http://a.ml/vocabularies/core#license",
                "traceValue": {
                  "@id": "warning_2_0_traceValue",
                  "@type": [
                    "reportSchema:TraceValueNode",
                    "validation:TraceValue"
                  ],
                  "actual": 0,
                  "condition": ">=",
                  "expected": 1,
                  "negated": false
                }
              }
            ]
          },
          {
            "@id": "warning_3",
            "@type": [
              "reportSchema:ValidationResultNode",
              "shacl:ValidationResult"
            ],
            "focusNode": "amf://id#8",
            "location": {
              "@id": "warning_3_location",
              "@type": [
                "lexicalSchema:LocationNode",
                "lexical:Location"
              ],
              "range": {
                "@id": "warning_3_location_range",
                "@type": [
                  "lexicalSchema:RangeNode",
                  "lexical:Range"
                ],
                "end": {
                  "@id": "warning_3_location_range_end",
                  "@type": [
                    "lexicalSchema:PositionNode",
                    "lexical:Position"
                  ],
                  "column": 0,
                  "line": 26
                },
                "start": {
                  "@id": "warning_3_location_range_start",
                  "@type": [
                    "lexicalSchema:PositionNode",
                    "lexical:Position"
                  ],
                  "column": 4,
                  "line": 19
                }
              },
              "uri": "file://./test/data/production/spectral/negative3.yaml"
            },
            "resultMessage": "Operation should have non-empty tags array.",
            "resultSeverity": "http://www.w3.org/ns/shacl#Warning",
            "sourceShapeName": "operation-tags",
            "trace": [
              {
                "@id": "warning_3_0",
                "@type": [
                  "reportSchema:TraceMessageNode",
                  "validation:TraceMessage"
                ],
                "component": "minCount",
                "location": {
                  "@id": "warning_3_0_location",
                  "@type": [
                    "lexicalSchema:LocationNode",
                    "lexical:Location"
                  ],
                  "range": {
                    "@id": "warning_3_0_location_range",
                    "@type": [
                      "lexicalSchema:RangeNode",
                      "lexical:Range"
                    ],
                    "end": {
                      "@id": "warning_3_0_location_range_end",
                      "@type": [
                        "lexicalSchema:PositionNode",
                        "lexical:Position"
                      ],
                      "column": 0,
                      "line": 26
                    },
                    "start": {
                      "@id": "warning_3_0_location_range_start",
                      "@type": [
                        "lexicalSchema:PositionNode",
                        "lexical:Position"
                      ],
                      "column": 4,
                      "line": 19
                    }
                  },
                  "uri": "file://./test/data/production/spectral/negative3.yaml"
                },
                "resultPath": "http://a.ml/vocabularies/apiContract#tag",
                "traceValue": {
                  "@id": "warning_3_0_traceValue",
                  "@type": [
                    "reportSchema:TraceValueNode",
                    "validation:TraceValue"
                  ],
                  "actual": 0,
                  "condition": ">=",
                  "expected": 1,
                  "negated": false
                }
              }
            ]
          }
        ]
      }
    ],
    "doc:processingData": [
      {
        "@id": "processing-data",
        "@type": [
          "doc:DialectInstanceProcessingData"
        ],
        "doc:sourceSpec": "Validation Report 1.0"
      }
    ]
  }
]
