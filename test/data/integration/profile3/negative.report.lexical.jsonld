{
  "@context": {
    "actual": {
      "@id": "http://a.ml/vocabularies/validation#actual"
    },
    "apiContract": "http://a.ml/vocabularies/apiContract#",
    "argument": {
      "@id": "http://a.ml/vocabularies/validation#argument"
    },
    "column": {
      "@id": "http://a.ml/vocabularies/lexical#column"
    },
    "component": {
      "@id": "http://a.ml/vocabularies/validation#component"
    },
    "condition": {
      "@id": "http://a.ml/vocabularies/validation#condition"
    },
    "conforms": {
      "@id": "http://www.w3.org/ns/shacl#conforms"
    },
    "core": "http://a.ml/vocabularies/core#",
    "data": "http://a.ml/vocabularies/data#",
    "doc": "http://a.ml/vocabularies/document#",
    "end": {
      "@id": "http://a.ml/vocabularies/lexical#end"
    },
    "expected": {
      "@id": "http://a.ml/vocabularies/validation#expected"
    },
    "focusNode": {
      "@id": "http://www.w3.org/ns/shacl#focusNode"
    },
    "lexical": "http://a.ml/vocabularies/lexical#",
    "line": {
      "@id": "http://a.ml/vocabularies/lexical#line"
    },
    "location": {
      "@id": "http://a.ml/vocabularies/validation#location"
    },
    "negated": {
      "@id": "http://a.ml/vocabularies/validation#negated"
    },
    "range": {
      "@id": "http://a.ml/vocabularies/lexical#range"
    },
    "rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
    "rdfs": "http://www.w3.org/2000/01/rdf-schema",
    "result": {
      "@id": "http://www.w3.org/ns/shacl#result"
    },
    "resultMessage": {
      "@id": "http://www.w3.org/ns/shacl#resultMessage"
    },
    "resultPath": {
      "@id": "http://www.w3.org/ns/shacl#resultPath"
    },
    "resultSeverity": {
      "@id": "http://www.w3.org/ns/shacl#resultSeverity"
    },
    "security": "http://a.ml/vocabularies/security#",
    "shacl": "http://www.w3.org/ns/shacl#",
    "shapes": "http://a.ml/vocabularies/shapes#",
    "sourceShapeName": {
      "@id": "http://a.ml/vocabularies/validation#sourceShapeName"
    },
    "sourcemaps": "http://a.ml/vocabularies/document-source-maps#",
    "start": {
      "@id": "http://a.ml/vocabularies/lexical#start"
    },
    "subResult": {
      "@id": "http://a.ml/vocabularies/validation#subResult"
    },
    "trace": {
      "@id": "http://a.ml/vocabularies/validation#trace"
    },
    "traceValue": {
      "@id": "http://www.w3.org/ns/shacl#traceValue"
    },
    "uri": {
      "@id": "http://a.ml/vocabularies/lexical#uri"
    },
    "validation": "http://a.ml/vocabularies/validation#",
    "xsd": "http://www.w3.org/2001/XMLSchema#"
  },
  "@type": "shacl:ValidationReport",
  "conforms": false,
  "result": [
    {
      "@type": [
        "shacl:ValidationResult"
      ],
      "focusNode": {
        "@id": "file://test/data/integration/profile3/negative.data.raml#/web-api/endpoint/%2Fendpoint1"
      },
      "resultMessage": "Endpoints must have a POST method",
      "resultSeverity": {
        "@id": "http://www.w3.org/ns/shacl#Violation"
      },
      "sourceShapeName": "validation1",
      "trace": [
        {
          "@type": [
            "validation:TraceMessage"
          ],
          "component": "atLeast",
          "location": {
            "@type": [
              "lexical:Location"
            ],
            "range": {
              "@type": [
                "lexical:Range"
              ],
              "end": {
                "@type": [
                  "lexical:Position"
                ],
                "column": 0,
                "line": 22
              },
              "start": {
                "@type": [
                  "lexical:Position"
                ],
                "column": 0,
                "line": 5
              }
            },
            "uri": "file://test/data/integration/profile3/negative.data.raml"
          },
          "resultPath": "apiContract.supportedOperation",
          "traceValue": {
            "cardinality": 2,
            "failedNodes": 1,
            "negated": false,
            "subResult": [
              {
                "@type": [
                  "shacl:ValidationResult"
                ],
                "focusNode": {
                  "@id": "file://test/data/integration/profile3/negative.data.raml#/web-api/endpoint/%2Fendpoint1/supportedOperation/get"
                },
                "resultMessage": "error in nested nodes under apiContract.supportedOperation",
                "sourceShapeName": "nested",
                "trace": [
                  {
                    "@type": [
                      "validation:TraceMessage"
                    ],
                    "component": "in",
                    "location": {
                      "@type": [
                        "lexical:Location"
                      ],
                      "range": {
                        "@type": [
                          "lexical:Range"
                        ],
                        "end": {
                          "@type": [
                            "lexical:Position"
                          ],
                          "column": 0,
                          "line": 22
                        },
                        "start": {
                          "@type": [
                            "lexical:Position"
                          ],
                          "column": 2,
                          "line": 14
                        }
                      },
                      "uri": "file://test/data/integration/profile3/negative.data.raml"
                    },
                    "resultPath": "apiContract.method",
                    "traceValue": {
                      "actual": "get",
                      "expected": "[\"put\",\"patch\"]",
                      "negated": false
                    }
                  }
                ]
              }
            ],
            "successfulNodes": 1
          }
        }
      ]
    },
    {
      "@type": [
        "shacl:ValidationResult"
      ],
      "focusNode": {
        "@id": "file://test/data/integration/profile3/negative.data.raml#/web-api/endpoint/%2Fendpoint2"
      },
      "resultMessage": "Endpoints must have a POST method",
      "resultSeverity": {
        "@id": "http://www.w3.org/ns/shacl#Violation"
      },
      "sourceShapeName": "validation1",
      "trace": [
        {
          "@type": [
            "validation:TraceMessage"
          ],
          "component": "atLeast",
          "location": {
            "@type": [
              "lexical:Location"
            ],
            "range": {
              "@type": [
                "lexical:Range"
              ],
              "end": {
                "@type": [
                  "lexical:Position"
                ],
                "column": 0,
                "line": 40
              },
              "start": {
                "@type": [
                  "lexical:Position"
                ],
                "column": 0,
                "line": 22
              }
            },
            "uri": "file://test/data/integration/profile3/negative.data.raml"
          },
          "resultPath": "apiContract.supportedOperation",
          "traceValue": {
            "cardinality": 2,
            "failedNodes": 1,
            "negated": false,
            "subResult": [
              {
                "@type": [
                  "shacl:ValidationResult"
                ],
                "focusNode": {
                  "@id": "file://test/data/integration/profile3/negative.data.raml#/web-api/endpoint/%2Fendpoint2/supportedOperation/get"
                },
                "resultMessage": "error in nested nodes under apiContract.supportedOperation",
                "sourceShapeName": "nested",
                "trace": [
                  {
                    "@type": [
                      "validation:TraceMessage"
                    ],
                    "component": "in",
                    "location": {
                      "@type": [
                        "lexical:Location"
                      ],
                      "range": {
                        "@type": [
                          "lexical:Range"
                        ],
                        "end": {
                          "@type": [
                            "lexical:Position"
                          ],
                          "column": 0,
                          "line": 40
                        },
                        "start": {
                          "@type": [
                            "lexical:Position"
                          ],
                          "column": 2,
                          "line": 31
                        }
                      },
                      "uri": "file://test/data/integration/profile3/negative.data.raml"
                    },
                    "resultPath": "apiContract.method",
                    "traceValue": {
                      "actual": "get",
                      "expected": "[\"put\",\"patch\"]",
                      "negated": false
                    }
                  }
                ]
              }
            ],
            "successfulNodes": 1
          }
        }
      ]
    },
    {
      "@type": [
        "shacl:ValidationResult"
      ],
      "focusNode": {
        "@id": "file://test/data/integration/profile3/negative.data.raml#/web-api/endpoint/%2Fendpoint3"
      },
      "resultMessage": "Endpoints must have a POST method",
      "resultSeverity": {
        "@id": "http://www.w3.org/ns/shacl#Violation"
      },
      "sourceShapeName": "validation1",
      "trace": [
        {
          "@type": [
            "validation:TraceMessage"
          ],
          "component": "atLeast",
          "location": {
            "@type": [
              "lexical:Location"
            ],
            "range": {
              "@type": [
                "lexical:Range"
              ],
              "end": {
                "@type": [
                  "lexical:Position"
                ],
                "column": 12,
                "line": 56
              },
              "start": {
                "@type": [
                  "lexical:Position"
                ],
                "column": 0,
                "line": 40
              }
            },
            "uri": "file://test/data/integration/profile3/negative.data.raml"
          },
          "resultPath": "apiContract.supportedOperation",
          "traceValue": {
            "cardinality": 2,
            "failedNodes": 2,
            "negated": false,
            "subResult": [
              {
                "@type": [
                  "shacl:ValidationResult"
                ],
                "focusNode": {
                  "@id": "file://test/data/integration/profile3/negative.data.raml#/web-api/endpoint/%2Fendpoint3/supportedOperation/get"
                },
                "resultMessage": "error in nested nodes under apiContract.supportedOperation",
                "sourceShapeName": "nested",
                "trace": [
                  {
                    "@type": [
                      "validation:TraceMessage"
                    ],
                    "component": "in",
                    "location": {
                      "@type": [
                        "lexical:Location"
                      ],
                      "range": {
                        "@type": [
                          "lexical:Range"
                        ],
                        "end": {
                          "@type": [
                            "lexical:Position"
                          ],
                          "column": 0,
                          "line": 49
                        },
                        "start": {
                          "@type": [
                            "lexical:Position"
                          ],
                          "column": 2,
                          "line": 41
                        }
                      },
                      "uri": "file://test/data/integration/profile3/negative.data.raml"
                    },
                    "resultPath": "apiContract.method",
                    "traceValue": {
                      "actual": "get",
                      "expected": "[\"put\",\"patch\"]",
                      "negated": false
                    }
                  }
                ]
              },
              {
                "@type": [
                  "shacl:ValidationResult"
                ],
                "focusNode": {
                  "@id": "file://test/data/integration/profile3/negative.data.raml#/web-api/endpoint/%2Fendpoint3/supportedOperation/post"
                },
                "resultMessage": "error in nested nodes under apiContract.supportedOperation",
                "sourceShapeName": "nested",
                "trace": [
                  {
                    "@type": [
                      "validation:TraceMessage"
                    ],
                    "component": "in",
                    "location": {
                      "@type": [
                        "lexical:Location"
                      ],
                      "range": {
                        "@type": [
                          "lexical:Range"
                        ],
                        "end": {
                          "@type": [
                            "lexical:Position"
                          ],
                          "column": 12,
                          "line": 56
                        },
                        "start": {
                          "@type": [
                            "lexical:Position"
                          ],
                          "column": 2,
                          "line": 49
                        }
                      },
                      "uri": "file://test/data/integration/profile3/negative.data.raml"
                    },
                    "resultPath": "apiContract.method",
                    "traceValue": {
                      "actual": "post",
                      "expected": "[\"put\",\"patch\"]",
                      "negated": false
                    }
                  }
                ]
              }
            ],
            "successfulNodes": 0
          }
        }
      ]
    }
  ]
}