{
  "@context": {
    "actual": {
      "@id": "http://a.ml/vocabularies/validation#actual"
    },
    "argument": {
      "@id": "http://a.ml/vocabularies/validation#argument"
    },
    "column": {
      "@id": "http://a.ml/vocabularies/lexical#column"
    },
    "component": {
      "@id": "http://a.ml/vocabularies/validation#component"
    },
    "condition": {
      "@id": "http://a.ml/vocabularies/validation#condition"
    },
    "conforms": {
      "@id": "http://www.w3.org/ns/shacl#conforms"
    },
    "end": {
      "@id": "http://a.ml/vocabularies/lexical#end"
    },
    "expected": {
      "@id": "http://a.ml/vocabularies/validation#expected"
    },
    "focusNode": {
      "@id": "http://www.w3.org/ns/shacl#focusNode"
    },
    "lexical": "http://a.ml/vocabularies/lexical#",
    "line": {
      "@id": "http://a.ml/vocabularies/lexical#line"
    },
    "location": {
      "@id": "http://a.ml/vocabularies/validation#location"
    },
    "negated": {
      "@id": "http://a.ml/vocabularies/validation#negated"
    },
    "range": {
      "@id": "http://a.ml/vocabularies/lexical#range"
    },
    "result": {
      "@id": "http://www.w3.org/ns/shacl#result"
    },
    "resultMessage": {
      "@id": "http://www.w3.org/ns/shacl#resultMessage"
    },
    "resultPath": {
      "@id": "http://www.w3.org/ns/shacl#resultPath"
    },
    "resultSeverity": {
      "@id": "http://www.w3.org/ns/shacl#resultSeverity"
    },
    "shacl": "http://www.w3.org/ns/shacl#",
    "sourceShapeName": {
      "@id": "http://a.ml/vocabularies/validation#sourceShapeName"
    },
    "start": {
      "@id": "http://a.ml/vocabularies/lexical#start"
    },
    "subResult": {
      "@id": "http://a.ml/vocabularies/validation#subResult"
    },
    "trace": {
      "@id": "http://a.ml/vocabularies/validation#trace"
    },
    "traceValue": {
      "@id": "http://www.w3.org/ns/shacl#traceValue"
    },
    "uri": {
      "@id": "http://a.ml/vocabularies/lexical#uri"
    },
    "validation": "http://a.ml/vocabularies/validation#"
  },
  "@type": "shacl:ValidationReport",
  "conforms": false,
  "result": [
    {
      "@type": [
        "shacl:ValidationResult"
      ],
      "sourceShapeName": "validation1",
      "focusNode": {
        "@id": "file://test/data/integration/profile3/negative.data.raml#/web-api/end-points/%2Fendpoint1"
      },
      "resultSeverity": {
        "@id": "http://www.w3.org/ns/shacl#Violation"
      },
      "resultMessage": "Endpoints must have a POST method",
      "trace": [
        {
          "@type": [
            "validation:TraceMessage"
          ],
          "component": "existential",
          "resultPath": "apiContract.supportedOperation",
          "traceValue": {
            "@type": [
              "validation:TraceValue"
            ],
            "actual": 1,
            "expected": 0,
            "negated": false,
            "subResult": [
              {
                "@type": [
                  "shacl:ValidationResult"
                ],
                "sourceShapeName": "nested",
                "focusNode": {
                  "@id": "file://test/data/integration/profile3/negative.data.raml#/web-api/end-points/%2Fendpoint1/get"
                },
                "resultMessage": "error in nested nodes under apiContract.supportedOperation",
                "trace": [
                  {
                    "@type": [
                      "validation:TraceMessage"
                    ],
                    "component": "in",
                    "resultPath": "apiContract.method",
                    "traceValue": {
                      "@type": [
                        "validation:TraceValue"
                      ],
                      "actual": "get",
                      "expected": "[\"put\",\"patch\"]",
                      "negated": false
                    },
                    "location": {
                      "@type": [
                        "lexical:Location"
                      ],
                      "range": {
                        "@type": [
                          "lexical:Range"
                        ],
                        "start": {
                          "@type": [
                            "lexical:Position"
                          ],
                          "line": 14,
                          "column": 2
                        },
                        "end": {
                          "@type": [
                            "lexical:Position"
                          ],
                          "line": 22,
                          "column": 0
                        }
                      }
                    }
                  }
                ]
              }
            ]
          },
          "location": {
            "@type": [
              "lexical:Location"
            ],
            "range": {
              "@type": [
                "lexical:Range"
              ],
              "start": {
                "@type": [
                  "lexical:Position"
                ],
                "line": 5,
                "column": 0
              },
              "end": {
                "@type": [
                  "lexical:Position"
                ],
                "line": 22,
                "column": 0
              }
            }
          }
        }
      ]
    },
    {
      "@type": [
        "shacl:ValidationResult"
      ],
      "sourceShapeName": "validation1",
      "focusNode": {
        "@id": "file://test/data/integration/profile3/negative.data.raml#/web-api/end-points/%2Fendpoint2"
      },
      "resultSeverity": {
        "@id": "http://www.w3.org/ns/shacl#Violation"
      },
      "resultMessage": "Endpoints must have a POST method",
      "trace": [
        {
          "@type": [
            "validation:TraceMessage"
          ],
          "component": "existential",
          "resultPath": "apiContract.supportedOperation",
          "traceValue": {
            "@type": [
              "validation:TraceValue"
            ],
            "actual": 1,
            "expected": 0,
            "negated": false,
            "subResult": [
              {
                "@type": [
                  "shacl:ValidationResult"
                ],
                "sourceShapeName": "nested",
                "focusNode": {
                  "@id": "file://test/data/integration/profile3/negative.data.raml#/web-api/end-points/%2Fendpoint2/get"
                },
                "resultMessage": "error in nested nodes under apiContract.supportedOperation",
                "trace": [
                  {
                    "@type": [
                      "validation:TraceMessage"
                    ],
                    "component": "in",
                    "resultPath": "apiContract.method",
                    "traceValue": {
                      "@type": [
                        "validation:TraceValue"
                      ],
                      "actual": "get",
                      "expected": "[\"put\",\"patch\"]",
                      "negated": false
                    },
                    "location": {
                      "@type": [
                        "lexical:Location"
                      ],
                      "range": {
                        "@type": [
                          "lexical:Range"
                        ],
                        "start": {
                          "@type": [
                            "lexical:Position"
                          ],
                          "line": 31,
                          "column": 2
                        },
                        "end": {
                          "@type": [
                            "lexical:Position"
                          ],
                          "line": 40,
                          "column": 0
                        }
                      }
                    }
                  }
                ]
              }
            ]
          },
          "location": {
            "@type": [
              "lexical:Location"
            ],
            "range": {
              "@type": [
                "lexical:Range"
              ],
              "start": {
                "@type": [
                  "lexical:Position"
                ],
                "line": 22,
                "column": 0
              },
              "end": {
                "@type": [
                  "lexical:Position"
                ],
                "line": 40,
                "column": 0
              }
            }
          }
        }
      ]
    },
    {
      "@type": [
        "shacl:ValidationResult"
      ],
      "sourceShapeName": "validation1",
      "focusNode": {
        "@id": "file://test/data/integration/profile3/negative.data.raml#/web-api/end-points/%2Fendpoint3"
      },
      "resultSeverity": {
        "@id": "http://www.w3.org/ns/shacl#Violation"
      },
      "resultMessage": "Endpoints must have a POST method",
      "trace": [
        {
          "@type": [
            "validation:TraceMessage"
          ],
          "component": "existential",
          "resultPath": "apiContract.supportedOperation",
          "traceValue": {
            "@type": [
              "validation:TraceValue"
            ],
            "actual": 2,
            "expected": 0,
            "negated": false,
            "subResult": [
              {
                "@type": [
                  "shacl:ValidationResult"
                ],
                "sourceShapeName": "nested",
                "focusNode": {
                  "@id": "file://test/data/integration/profile3/negative.data.raml#/web-api/end-points/%2Fendpoint3/get"
                },
                "resultMessage": "error in nested nodes under apiContract.supportedOperation",
                "trace": [
                  {
                    "@type": [
                      "validation:TraceMessage"
                    ],
                    "component": "in",
                    "resultPath": "apiContract.method",
                    "traceValue": {
                      "@type": [
                        "validation:TraceValue"
                      ],
                      "actual": "get",
                      "expected": "[\"put\",\"patch\"]",
                      "negated": false
                    },
                    "location": {
                      "@type": [
                        "lexical:Location"
                      ],
                      "range": {
                        "@type": [
                          "lexical:Range"
                        ],
                        "start": {
                          "@type": [
                            "lexical:Position"
                          ],
                          "line": 41,
                          "column": 2
                        },
                        "end": {
                          "@type": [
                            "lexical:Position"
                          ],
                          "line": 49,
                          "column": 0
                        }
                      }
                    }
                  }
                ]
              },
              {
                "@type": [
                  "shacl:ValidationResult"
                ],
                "sourceShapeName": "nested",
                "focusNode": {
                  "@id": "file://test/data/integration/profile3/negative.data.raml#/web-api/end-points/%2Fendpoint3/post"
                },
                "resultMessage": "error in nested nodes under apiContract.supportedOperation",
                "trace": [
                  {
                    "@type": [
                      "validation:TraceMessage"
                    ],
                    "component": "in",
                    "resultPath": "apiContract.method",
                    "traceValue": {
                      "@type": [
                        "validation:TraceValue"
                      ],
                      "actual": "post",
                      "expected": "[\"put\",\"patch\"]",
                      "negated": false
                    },
                    "location": {
                      "@type": [
                        "lexical:Location"
                      ],
                      "range": {
                        "@type": [
                          "lexical:Range"
                        ],
                        "start": {
                          "@type": [
                            "lexical:Position"
                          ],
                          "line": 49,
                          "column": 2
                        },
                        "end": {
                          "@type": [
                            "lexical:Position"
                          ],
                          "line": 56,
                          "column": 12
                        }
                      }
                    }
                  }
                ]
              }
            ]
          },
          "location": {
            "@type": [
              "lexical:Location"
            ],
            "range": {
              "@type": [
                "lexical:Range"
              ],
              "start": {
                "@type": [
                  "lexical:Position"
                ],
                "line": 40,
                "column": 0
              },
              "end": {
                "@type": [
                  "lexical:Position"
                ],
                "line": 56,
                "column": 12
              }
            }
          }
        }
      ]
    }
  ]
}